$date
	Wed Oct 28 11:07:29 2020
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module cpu_tb $end
$scope module mycpu $end
$scope module reg1 $end
$var reg 8 ! \regfile[0] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mycpu $end
$scope module reg1 $end
$var reg 8 " \regfile[1] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mycpu $end
$scope module reg1 $end
$var reg 8 # \regfile[2] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mycpu $end
$scope module reg1 $end
$var reg 8 $ \regfile[3] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mycpu $end
$scope module reg1 $end
$var reg 8 % \regfile[4] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mycpu $end
$scope module reg1 $end
$var reg 8 & \regfile[5] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mycpu $end
$scope module reg1 $end
$var reg 8 ' \regfile[6] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mycpu $end
$scope module reg1 $end
$var reg 8 ( \regfile[7] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$var wire 32 ) PC [31:0] $end
$var wire 32 * INSTRUCTION [31:0] $end
$var reg 1 + CLK $end
$var reg 1 , RESET $end
$scope module mycpu $end
$var wire 1 + CLK $end
$var wire 32 - INSTRUCTION [31:0] $end
$var wire 1 , RESET $end
$var wire 8 . temp3 [7:0] $end
$var wire 8 / temp2 [7:0] $end
$var wire 3 0 opcode [2:0] $end
$var wire 8 1 compliment2 [7:0] $end
$var wire 8 2 WRITEDATA [7:0] $end
$var wire 8 3 REGOUT2 [7:0] $end
$var wire 8 4 REGOUT1 [7:0] $end
$var wire 32 5 PC [31:0] $end
$var reg 1 6 comp_flag $end
$var reg 1 7 imm_flag $end
$var reg 3 8 temp_sel [2:0] $end
$scope module alu1 $end
$var wire 3 9 SELECT [2:0] $end
$var wire 8 : orout [7:0] $end
$var wire 8 ; forwout [7:0] $end
$var wire 8 < andout [7:0] $end
$var wire 8 = addout [7:0] $end
$var wire 8 > RESULT [7:0] $end
$var wire 8 ? DATA2 [7:0] $end
$var wire 8 @ DATA1 [7:0] $end
$scope module a1 $end
$var wire 3 A SELECT [2:0] $end
$var wire 8 B RESULT [7:0] $end
$var wire 8 C DATA2 [7:0] $end
$var wire 8 D DATA1 [7:0] $end
$upscope $end
$scope module and1 $end
$var wire 8 E RESULT [7:0] $end
$var wire 3 F SELECT [2:0] $end
$var wire 8 G DATA2 [7:0] $end
$var wire 8 H DATA1 [7:0] $end
$upscope $end
$scope module f1 $end
$var wire 8 I RESULT [7:0] $end
$var wire 3 J SELECT [2:0] $end
$var wire 8 K DATA2 [7:0] $end
$upscope $end
$scope module m1 $end
$var wire 8 L in0 [7:0] $end
$var wire 8 M in1 [7:0] $end
$var wire 8 N in2 [7:0] $end
$var wire 3 O sel [2:0] $end
$var wire 8 P in3 [7:0] $end
$var reg 8 Q result [7:0] $end
$upscope $end
$scope module or1 $end
$var wire 8 R RESULT [7:0] $end
$var wire 3 S SELECT [2:0] $end
$var wire 8 T DATA2 [7:0] $end
$var wire 8 U DATA1 [7:0] $end
$upscope $end
$upscope $end
$scope module m1 $end
$var wire 1 6 control $end
$var wire 8 V in1 [7:0] $end
$var wire 8 W in2 [7:0] $end
$var reg 8 X out [7:0] $end
$upscope $end
$scope module m2 $end
$var wire 1 7 control $end
$var wire 8 Y in1 [7:0] $end
$var wire 8 Z in2 [7:0] $end
$var reg 8 [ out [7:0] $end
$upscope $end
$scope module reg1 $end
$var wire 1 + CLK $end
$var wire 8 \ IN [7:0] $end
$var wire 3 ] INADDRESS [2:0] $end
$var wire 8 ^ OUT1 [7:0] $end
$var wire 3 _ OUT1ADDRESS [2:0] $end
$var wire 8 ` OUT2 [7:0] $end
$var wire 3 a OUT2ADDRESS [2:0] $end
$var wire 1 , RESET $end
$var wire 1 b WRITE $end
$var integer 32 c i [31:0] $end
$upscope $end
$scope module res $end
$var wire 1 + CLK $end
$var wire 1 , RESET $end
$var wire 32 d PC_1 [31:0] $end
$var reg 32 e PC_0 [31:0] $end
$scope module add1 $end
$var wire 32 f PC_0 [31:0] $end
$var wire 32 g PC_1 [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx g
bx f
bx e
bx d
b1000 c
1b
bx a
bx `
bx _
bx ^
bx ]
bx \
bx [
bx Z
bx Y
bx X
bx W
bx V
bx U
bx T
bx S
bx R
bx Q
bx P
bx O
bx N
bx M
bx L
bx K
bx J
bx I
bx H
bx G
bx F
bx E
bx D
bx C
bx B
bx A
bx @
bx ?
bx >
bx =
bx <
bx ;
bx :
bx 9
bx 8
x7
x6
bx 5
bx 4
bx 3
bx 2
bx 1
bx 0
bx /
bx .
bx -
1,
0+
bx *
bx )
bx (
bx '
bx &
bx %
bx $
bx #
bx "
bx !
$end
#4
1+
#5
b0 )
b0 5
b0 e
b0 f
b0 (
b0 '
b0 &
b0 %
b0 $
b0 #
b0 "
b0 !
b1000 c
0,
#6
b100 d
b100 g
#7
b0 0
b100 ]
b0 _
b101 a
b101 Y
b1000000000000000101 *
b1000000000000000101 -
#8
b101 .
b101 ?
b101 C
b101 G
b101 K
b101 T
b101 [
17
06
b0 8
b0 9
b0 A
b0 F
b0 J
b0 O
b0 S
0+
#9
b101 2
b101 >
b101 Q
b101 \
b0 /
b0 X
b0 Z
bx1x1 :
bx1x1 P
bx1x1 R
b0x0x <
b0x0x E
b0x0x N
b101 ;
b101 I
b101 L
b0 4
b0 @
b0 D
b0 H
b0 U
b0 ^
b0 3
b0 W
b0 `
#10
b101 :
b101 P
b101 R
b0 <
b0 E
b0 N
b0 1
b0 V
#11
b101 =
b101 B
b101 M
#12
1+
#13
b101 %
b100 )
b100 5
b100 e
b100 f
#14
b1000 d
b1000 g
#15
b1001 .
b1001 ?
b1001 C
b1001 G
b1001 K
b1001 T
b1001 [
b10 ]
b1 a
b1001 Y
b100000000000001001 *
b100000000000001001 -
#16
b1001 2
b1001 >
b1001 Q
b1001 \
b1001 :
b1001 P
b1001 R
b1001 ;
b1001 I
b1001 L
0+
#17
b1001 =
b1001 B
b1001 M
#20
1+
#21
b1000 )
b1000 5
b1000 e
b1000 f
b1001 #
#22
b1100 d
b1100 g
#23
b10 0
b10 .
b10 ?
b10 C
b10 G
b10 K
b10 T
b10 [
b110 ]
b100 _
b10 a
b10 Y
b10000001100000010000000010 *
b10000001100000010000000010 -
#24
b0 .
b0 ?
b0 C
b0 G
b0 K
b0 T
b0 [
07
b1 8
b1 9
b1 A
b1 F
b1 J
b1 O
b1 S
b1001 2
b1001 >
b1001 Q
b1001 \
b10 :
b10 P
b10 R
b10 ;
b10 I
b10 L
0+
#25
b1001 .
b1001 ?
b1001 C
b1001 G
b1001 K
b1001 T
b1001 [
b1001 /
b1001 X
b1001 Z
b0 :
b0 P
b0 R
b0 ;
b0 I
b0 L
b101 4
b101 @
b101 D
b101 H
b101 U
b101 ^
b1001 3
b1001 W
b1001 `
#26
b1 <
b1 E
b1 N
b1001 ;
b1001 I
b1001 L
b1101 :
b1101 P
b1101 R
b11110111 1
b11110111 V
#27
b1110 2
b1110 >
b1110 Q
b1110 \
b1110 =
b1110 B
b1110 M
#28
1+
#29
b1110 '
b1100 )
b1100 5
b1100 e
b1100 f
#30
b10000 d
b10000 g
#31
b1 0
b0 ]
b0 _
b110 a
b110 Y
b1000000000000000000000110 *
b1000000000000000000000110 -
#32
b1001 2
b1001 >
b1001 Q
b1001 \
b0 8
b0 9
b0 A
b0 F
b0 J
b0 O
b0 S
0+
#33
b1110 .
b1110 ?
b1110 C
b1110 G
b1110 K
b1110 T
b1110 [
b1110 /
b1110 X
b1110 Z
b0 4
b0 @
b0 D
b0 H
b0 U
b0 ^
b1110 3
b1110 W
b1110 `
#34
b1110 2
b1110 >
b1110 Q
b1110 \
b1110 ;
b1110 I
b1110 L
b1110 :
b1110 P
b1110 R
b0 <
b0 E
b0 N
b11110010 1
b11110010 V
#36
1+
#37
b10000 )
b10000 5
b10000 e
b10000 f
b1110 !
#38
b10100 d
b10100 g
#39
b0 0
b101 ]
b1 a
b1 Y
b1010000000000000001 *
b1010000000000000001 -
b1110 4
b1110 @
b1110 D
b1110 H
b1110 U
b1110 ^
#40
b1 .
b1 ?
b1 C
b1 G
b1 K
b1 T
b1 [
17
b1110 <
b1110 E
b1110 N
0+
#41
b1 2
b1 >
b1 Q
b1 \
b0 /
b0 X
b0 Z
b1111 :
b1111 P
b1111 R
b0 <
b0 E
b0 N
b1 ;
b1 I
b1 L
b0 3
b0 W
b0 `
#42
b0 1
b0 V
b1111 =
b1111 B
b1111 M
#44
1+
#45
b1 &
b10100 )
b10100 5
b10100 e
b10100 f
#46
b11000 d
b11000 g
#47
b11 0
b101 .
b101 ?
b101 C
b101 G
b101 K
b101 T
b101 [
b11 ]
b10 _
b101 a
b101 Y
b11000000110000001000000101 *
b11000000110000001000000101 -
#48
b0 .
b0 ?
b0 C
b0 G
b0 K
b0 T
b0 [
07
16
b1 8
b1 9
b1 A
b1 F
b1 J
b1 O
b1 S
b1111 2
b1111 >
b1111 Q
b1111 \
b100 <
b100 E
b100 N
b101 ;
b101 I
b101 L
0+
#49
b1110 :
b1110 P
b1110 R
b0 <
b0 E
b0 N
b0 ;
b0 I
b0 L
b1001 4
b1001 @
b1001 D
b1001 H
b1001 U
b1001 ^
b1 3
b1 W
b1 `
#50
b11111111 .
b11111111 ?
b11111111 C
b11111111 G
b11111111 K
b11111111 T
b11111111 [
b11111111 /
b11111111 X
b11111111 Z
b1001 :
b1001 P
b1001 R
b11111111 1
b11111111 V
#51
b11111111 :
b11111111 P
b11111111 R
b1001 <
b1001 E
b1001 N
b11111111 ;
b11111111 I
b11111111 L
#52
b1000 2
b1000 >
b1000 Q
b1000 \
b1000 =
b1000 B
b1000 M
1+
#53
b11000 )
b11000 5
b11000 e
b11000 f
b1000 $
#54
b11100 d
b11100 g
#55
bx 0
bx ]
bx _
bx a
bx Y
bx *
bx -
#56
0+
#57
bx 4
bx @
bx D
bx H
bx U
bx ^
bx 3
bx W
bx `
#58
bx .
bx ?
bx C
bx G
bx K
bx T
bx [
bx /
bx X
bx Z
bx <
bx E
bx N
bx 1
bx V
#59
bx 2
bx >
bx Q
bx \
bx :
bx P
bx R
bx ;
bx I
bx L
bx =
bx B
bx M
#60
1+
#61
b11100 )
b11100 5
b11100 e
b11100 f
#62
b100000 d
b100000 g
#64
0+
#68
1+
#69
b100000 )
b100000 5
b100000 e
b100000 f
#70
b100100 d
b100100 g
#72
0+
#76
1+
#77
b100100 )
b100100 5
b100100 e
b100100 f
#78
b101000 d
b101000 g
#80
0+
#84
1+
#85
b101000 )
b101000 5
b101000 e
b101000 f
#86
b101100 d
b101100 g
#88
0+
#92
1+
#93
b101100 )
b101100 5
b101100 e
b101100 f
#94
b110000 d
b110000 g
#96
0+
#100
1+
#101
b110000 )
b110000 5
b110000 e
b110000 f
#102
b110100 d
b110100 g
#104
0+
#108
1+
#109
b110100 )
b110100 5
b110100 e
b110100 f
#110
b111000 d
b111000 g
#112
0+
#116
1+
#117
b111000 )
b111000 5
b111000 e
b111000 f
#118
b111100 d
b111100 g
#120
0+
#124
1+
#125
b111100 )
b111100 5
b111100 e
b111100 f
#126
b1000000 d
b1000000 g
#128
0+
#132
1+
#133
b1000000 )
b1000000 5
b1000000 e
b1000000 f
#134
b1000100 d
b1000100 g
#136
0+
#140
1+
#141
b1000100 )
b1000100 5
b1000100 e
b1000100 f
#142
b1001000 d
b1001000 g
#144
0+
#148
1+
#149
b1001000 )
b1001000 5
b1001000 e
b1001000 f
#150
b1001100 d
b1001100 g
#152
0+
#156
1+
#157
b1001100 )
b1001100 5
b1001100 e
b1001100 f
#158
b1010000 d
b1010000 g
#160
0+
#164
1+
#165
b1010000 )
b1010000 5
b1010000 e
b1010000 f
#166
b1010100 d
b1010100 g
#168
0+
#172
1+
#173
b1010100 )
b1010100 5
b1010100 e
b1010100 f
#174
b1011000 d
b1011000 g
#176
0+
#180
1+
#181
b1011000 )
b1011000 5
b1011000 e
b1011000 f
#182
b1011100 d
b1011100 g
#184
0+
#188
1+
#189
b1011100 )
b1011100 5
b1011100 e
b1011100 f
#190
b1100000 d
b1100000 g
#192
0+
#196
1+
#197
b1100000 )
b1100000 5
b1100000 e
b1100000 f
#198
b1100100 d
b1100100 g
#200
0+
#204
1+
#205
b1100100 )
b1100100 5
b1100100 e
b1100100 f
